
plugins {
    id "com.jfrog.bintray" version "1.8.0"
    id "cz.alenkacz.gradle.scalafmt" version "1.6.0"
    id "org.scoverage" version "2.3.0"
}


apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'org.scoverage'

mainClassName = "com.adobe.api.platform.runtime.mesos.sample.SampleHAFramework"

repositories {
    mavenCentral()
}

ext {
    scalaVersion = "2.11"
    akkaVersion = "2.5.3"
    akkaHttpVersion = "10.0.6"
}
dependencies {
    compile "org.scala-lang:scala-library:${gradle.scala.version}"
    //akka
    compile "com.typesafe.akka:akka-actor_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-stream_${scalaVersion}:${akkaVersion}"

    //akka-cluster
    compile "com.typesafe.akka:akka-remote_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-cluster_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-cluster-metrics_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-cluster-tools_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-distributed-data_${scalaVersion}:${akkaVersion}"
    //akka-http
    compile "com.typesafe.akka:akka-http_${scalaVersion}:${akkaHttpVersion}"

    //akka-management + akka-discovery
    compile "com.lightbend.akka.management:akka-management-cluster-bootstrap_${scalaVersion}:0.10.0"
    compile "com.lightbend.akka.discovery:akka-discovery-marathon-api_${scalaVersion}:0.10.0"

    //for mesos
    compile "org.apache.mesos:mesos:1.2.3"
    //for recordIO
    compile "com.lightbend.akka:akka-stream-alpakka-simple-codecs_${scalaVersion}:0.9"
    //for JSON printing of protobuf
    compile "com.google.protobuf:protobuf-java-util:3.3.1"

    testCompile 'org.scalatest:scalatest_2.11:3.0.1'
    testCompile "com.typesafe.akka:akka-testkit_${scalaVersion}:${akkaVersion}"
    testCompile 'junit:junit:4.11'
    scoverage gradle.scoverage.deps

}
group = 'com.adobe.api.platform.runtime'
version = "${version}"

scoverage {
  excludedPackages = [ 'com.adobe.api.platform.runtime.mesos.sample.*' ]
}

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = 'mesos-actor'
        desc = 'An Akka based actor for creating Apache Mesos frameworks.'
        userOrg = 'adobe-apiplatform'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/adobe-apiplatform/mesos-actor.git'
        issueTrackerUrl = 'https://github.com/adobe-apiplatform/mesos-actor/issues'
        websiteUrl = 'https://github.com/adobe-apiplatform/mesos-actor'
        githubRepo = 'adobe-apiplatform/mesos-actor' //Optional Github repository
        githubReleaseNotesFile = 'Readme.md' //Optional Github readme file
        version {
            name = project.version
            desc = 'Actor library for Apache Mesos'
            released  = new Date()
            vcsTag = project.version
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                //passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE') //Optional. The passphrase for GPG signing'
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "adobeio"
            name "Adobe IO"
            email "adobeio@adobe.com"
        }
    }

    scm {
        url "https://github.com/adobe-apiplatform/mesos-actor"
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.adobe.api.platform.runtime'
            artifactId 'mesos-actor'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'An Akka based actor for creating Apache Mesos frameworks.')
                root.appendNode('name', 'Adobe API Platform Actor for Apache Mesos')
                root.appendNode('url', 'https://github.com/adobe-apiplatform/mesos-actor')
                root.children().last() + pomConfig
            }
        }
    }
}
